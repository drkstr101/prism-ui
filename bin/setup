#!/usr/bin/env bash

set -eu
set -o pipefail

readonly BIN_DIR="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"
readonly ROOT_DIR="$(cd "${BIN_DIR}/.." && pwd)"

source "${ROOT_DIR}/libs/script/shell-utils.bash"

if [[ $BASH_VERSINFO -lt 4 ]]; then
  print::error "Before running this script please update Bash to v4 or higher (e.g.: \$ sudo apt install bash)"
fi

function main() {
  local db_cmd
  local os arch

  db_cmd="echo 'No database command provided'"

  while [[ "${#}" != 0 ]]; do
    case "${1}" in
    --help | -h)
      shift 1
      usage
      exit 0
      ;;

    --db-cmd | -d)
      db_cmd="${2}"
      shift 2
      ;;

    "")
      # skip if the argument is empty
      shift 1
      ;;

    *)
      print::error "unknown argument \"${1}\""
      ;;
    esac
  done

  os=$(tools::os)
  arch=$(tools::arch)

  print::title "Running setup for os=${os} arch=${arch}"

  # print::title "\n~~~> Installing global ruby gems"
  # gem install rails rubocop solargraph htmlbeautifier

  # TODO: Add an optional --skip-pg-start flag to skip this step
  print::title "~~~> Starting local database service"
  bash -c "${db_cmd}"

  print::title "~~~> Installing bit into ${BIN_DIR}"
  install::bit

  print::success "\nSetup complete."
}

function usage() {
  cat <<-USAGE
scripts/setup [OPTIONS]

Install tools and frameworks into the local development environment.

OPTIONS
  --help       -h   prints the command usage
  --db-cmd     -d   prints the command usage
USAGE
}

main "${@:-}"
