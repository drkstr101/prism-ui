FROM gitpod/workspace-full-vnc

ARG DEBIAN_FRONTEND=noninteractive
ARG TZ=UTC
ENV SHELL=/bin/bash
ENV LANG=en_US.UTF-8
# Dazzle does not rebuild a layer until one of its lines are changed. Increase this counter to rebuild this layer.
ENV TRIGGER_REBUILD=3

## Install packages
##########################

RUN set -eux \
  && sudo apt-get update -y \
  && sudo apt-get install -y locales libyaml-dev ca-certificates curl tar gzip libz-dev libssl-dev gcc make shellcheck

## Install Postgres
###################

# Dazzle does not rebuild a layer until one of its lines are changed. Increase this counter to rebuild this layer.
ENV TRIGGER_REBUILD=3
ENV PGWORKSPACE="/workspace/.pgsql"
ENV PGDATA="$PGWORKSPACE/data"

# Install PostgreSQL
RUN sudo sh -c 'echo "deb http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main" > /etc/apt/sources.list.d/pgdg.list' && \
  wget --quiet -O - https://www.postgresql.org/media/keys/ACCC4CF8.asc | sudo apt-key add - && \
  sudo install-packages postgresql-12 postgresql-contrib-12

# Setup PostgreSQL server for user gitpod
ENV PATH="/usr/lib/postgresql/12/bin:$PATH"

SHELL ["/usr/bin/bash", "-c"]
RUN PGDATA="${PGDATA//\/workspace/$HOME}" \
  && mkdir -p ~/.pg_ctl/bin ~/.pg_ctl/sockets $PGDATA \
  && initdb -D $PGDATA \
  && printf '#!/bin/bash\npg_ctl -D $PGDATA -l ~/.pg_ctl/log -o "-k ~/.pg_ctl/sockets" start\n' > ~/.pg_ctl/bin/pg_start \
  && printf '#!/bin/bash\npg_ctl -D $PGDATA -l ~/.pg_ctl/log -o "-k ~/.pg_ctl/sockets" stop\n' > ~/.pg_ctl/bin/pg_stop \
  && chmod +x ~/.pg_ctl/bin/*
ENV PATH="$HOME/.pg_ctl/bin:$PATH"
ENV DATABASE_URL="postgresql://gitpod@localhost"
ENV PGHOSTADDR="127.0.0.1"
ENV PGDATABASE="postgres"
COPY --chown=gitpod:gitpod tools/postgresql-hook.bash $HOME/.bashrc.d/200-postgresql-launch

## Install Truffleruby
######################

# ARG TARGETPLATFORM=linux/amd64
ARG GRAALVM_VERSION=24.1.1
ARG GRAALVM_ARCH=linux-amd64
ARG RUBY_VERSION=truffleruby-${GRAALVM_VERSION}
ARG GRAALVM_PKG="https://github.com/oracle/truffleruby/releases/download/graal-${GRAALVM_VERSION}/${RUBY_VERSION}-${GRAALVM_ARCH}.tar.gz"
# ENV  PATH="/opt/${RUBY_VERSION}/bin:${PATH}"

# RUN set -eux \
#   && mkdir -p /opt/${RUBY_VERSION} \
#   && if [ "$TARGETPLATFORM" == "linux/amd64" ]; then (curl --fail --silent --location --retry 3 ${GRAALVM_PKG/GRAALVM_ARCH/linux-amd64} | gunzip | tar x -C /opt/${RUBY_VERSION} --strip-components=1) && /opt/${RUBY_VERSION}/lib/truffle/post_install_hook.sh; fi \
#   && if [ "$TARGETPLATFORM" == "linux/arm64" ]; then (curl --fail --silent --location --retry 3 ${GRAALVM_PKG/GRAALVM_ARCH/linux-aarch64} | gunzip | tar x -C /opt/${RUBY_VERSION} --strip-components=1) && /opt/${RUBY_VERSION}/lib/truffle/post_install_hook.sh; fi \
#   && sed -i '/en_US.UTF-8/s/^# //g' /etc/locale.gen \
#   && locale-gen \
#   && echo "gem: --no-document" > ~/.gemrc

## Setup environment
######################

USER gitpod
SHELL ["/usr/bin/bash", "-c"]

# Create alias for nx binary
RUN printf 'alias nx=node_modules/.bin/nx' >> ~/.bashrc

# Install gems
RUN gem install rails rubocop solargraph htmlbeautifier

# ARG _truffle_version=truffleruby-24.1.1
# ARG _ruby_version=ruby-3.2.6
# RUN printf "rvm_gems_path=/home/gitpod/.rvm\n" > ~/.rvmrc \
#   && bash -lc "rvm uninstall ${_ruby_version}" \
#   && bash -lc "rvm get master --auto-dotfiles" \
#   && bash -lc "rvm reinstall ${_truffle_version} && rvm use ${_truffle_version} --default && gem install rails" \
#   && printf "rvm_gems_path=/workspace/.rvm" > ~/.rvmrc \
#   && printf '{ rvm use $(rvm current); } >/dev/null 2>&1\n' > "$HOME/.bashrc.d/70-ruby" \
#   && printf 'alias nx=node_modules/.bin/nx' >> ~/.bashrc

# ENV POSTGRES_DB=postgres
# ENV POSTGRES_USER=test
# ENV POSTGRES_PASS=test
